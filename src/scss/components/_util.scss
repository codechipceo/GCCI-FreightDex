/* layout.scss */

.page_container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;


    &.sm {
        max-width: 640px;
    }

    &.md {
        max-width: 768px;
    }

    &.lg {
        max-width: 1024px;
    }

    &.xl {
        max-width: 1280px;
    }
}

.stack {
    display: flex;
    gap: 1rem;

    &.vstack {
        flex-direction: column;
    }

    &.hstack {
        flex-direction: row;
    }

    &.align-start {
        align-items: flex-start;
    }

    &.align-center {
        align-items: center;
    }

    &.align-end {
        align-items: flex-end;
    }

    &.align-stretch {
        align-items: stretch;
    }

    &.justify-start {
        justify-content: flex-start;
    }

    &.justify-center {
        justify-content: center;
    }

    &.justify-end {
        justify-content: flex-end;
    }

    &.justify-between {
        justify-content: space-between;
    }

    &.justify-around {
        justify-content: space-around;
    }

    &.justify-evenly {
        justify-content: space-evenly;
    }
}


// _flex.scss or layout.scss

.flex {
    display: flex;
}

.inline-flex {
    display: inline-flex;
}

.flex-row {
    flex-direction: row;
}

.flex-col {
    flex-direction: column;
}

.flex-row-reverse {
    flex-direction: row-reverse;
}

.flex-col-reverse {
    flex-direction: column-reverse;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-nowrap {
    flex-wrap: nowrap;
}

.flex-wrap-reverse {
    flex-wrap: wrap-reverse;
}

.items-start {
    align-items: flex-start;
}

.items-center {
    align-items: center;
}

.items-end {
    align-items: flex-end;
}

.items-stretch {
    align-items: stretch;
}

.items-baseline {
    align-items: baseline;
}

.justify-start {
    justify-content: flex-start;
}

.justify-center {
    justify-content: center;
}

.justify-end {
    justify-content: flex-end;
}

.justify-between {
    justify-content: space-between;
}

.justify-around {
    justify-content: space-around;
}

.justify-evenly {
    justify-content: space-evenly;
}

.content-start {
    align-content: flex-start;
}

.content-center {
    align-content: center;
}

.content-end {
    align-content: flex-end;
}

.content-between {
    align-content: space-between;
}

.content-around {
    align-content: space-around;
}

.content-evenly {
    align-content: space-evenly;
}

.self-auto {
    align-self: auto;
}

.self-start {
    align-self: flex-start;
}

.self-center {
    align-self: center;
}

.self-end {
    align-self: flex-end;
}

.self-stretch {
    align-self: stretch;
}

.flex-1 {
    flex: 1 1 0%;
}

.flex-auto {
    flex: 1 1 auto;
}

.flex-initial {
    flex: 0 1 auto;
}

.flex-none {
    flex: none;
}

.grow {
    flex-grow: 1;
}

.grow-0 {
    flex-grow: 0;
}

.shrink {
    flex-shrink: 1;
}

.shrink-0 {
    flex-shrink: 0;
}
// _spacing.scss or inside layout.scss
$spacing-scale: (
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 0.75rem,
    4: 1rem,
    5: 1.25rem,
    6: 1.5rem,
    8: 2rem,
    10: 2.5rem,
    12: 3rem,
    16: 4rem,
);

// layout.scss or _utilities.scss

@each $key, $value in $spacing-scale {
    .m-#{$key} {
        margin: $value;
    }

    .mt-#{$key} {
        margin-top: $value;
    }

    .mr-#{$key} {
        margin-right: $value;
    }

    .mb-#{$key} {
        margin-bottom: $value;
    }

    .ml-#{$key} {
        margin-left: $value;
    }

    .mx-#{$key} {
        margin-left: $value;
        margin-right: $value;
    }

    .my-#{$key} {
        margin-top: $value;
        margin-bottom: $value;
    }
}

@each $key, $value in $spacing-scale {
    .p-#{$key} {
        padding: $value;
    }

    .pt-#{$key} {
        padding-top: $value;
    }

    .pr-#{$key} {
        padding-right: $value;
    }

    .pb-#{$key} {
        padding-bottom: $value;
    }

    .pl-#{$key} {
        padding-left: $value;
    }

    .px-#{$key} {
        padding-left: $value;
        padding-right: $value;
    }

    .py-#{$key} {
        padding-top: $value;
        padding-bottom: $value;
    }
}
@each $key, $value in $spacing-scale {
    .gap-#{$key} {
        gap: $value;
    }

    .gap-x-#{$key} {
        column-gap: $value;
    }

    .gap-y-#{$key} {
        row-gap: $value;
    }
}